{"version":3,"file":"static/js/473.683ec773.chunk.js","mappings":"sLA0DA,UAtDkB,WACd,IAAMA,GAAOC,EAAAA,EAAAA,KACb,GAA8BC,EAAAA,EAAAA,UAAS,CACnCC,SAAU,KADd,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,GAAUC,EAAAA,EAAAA,UA4BhB,OA1BAC,EAAAA,EAAAA,YAAU,WACNC,MACI,yHAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,KAAKL,KACX,CAACA,KAEJG,EAAAA,EAAAA,YAAU,WACNF,EAAQO,QAAQC,WAAWC,YAAa,EACpCf,EAAKgB,OAAS,IACdV,EAAQO,QAAQI,SAASC,KAAO,GAEhCZ,EAAQO,QAAQI,SAASC,KAAO,EAUpCZ,EAAQO,QAAQM,YALG,CACfC,IAAK,EACLC,IAAK,EACLC,SAAU,KAE0B,KACzC,CAAChB,EAASN,KAGT,+BACI,SAAC,IAAD,CACIuB,IAAKjB,EACLU,MAAOhB,EAAKgB,MACZQ,mBAAmB,EACnBC,0BAA0B,EAC1BC,gBAAgB,UAChBC,gBAAgB,gBAChBC,gBAAiBxB,EAAQD,SACzB0B,qBAAsB,EACtBC,iBAAkB,IAClBC,iBAAiBC,EAAAA,EAAAA,cAAY,iBAAM,YAAW,IAC9CC,aAAc,WACVC,QAAQC,IAAI","sources":["components/Stem/StemGlobe.jsx"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport Globe from \"react-globe.gl\";\r\nimport useWindowSize from \"../../hooks/windowSize\";\r\n\r\nconst StemGlobe = () => {\r\n    const size = useWindowSize();\r\n    const [hexData, setHexData] = useState({\r\n        features: [],\r\n    });\r\n    const globeEl = useRef();\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            \"https://raw.githubusercontent.com/vasturiano/react-globe.gl/master/example/datasets/ne_110m_admin_0_countries.geojson\"\r\n        )\r\n            .then((res) => res.json())\r\n            .then(setHexData);\r\n    }, [setHexData]);\r\n\r\n    useEffect(() => {\r\n        globeEl.current.controls().autoRotate = true;\r\n        if (size.width <= 425) {\r\n            globeEl.current.camera().zoom = 0.6;\r\n        } else {\r\n            globeEl.current.camera().zoom = 1;\r\n        }\r\n        // globeEl.current.controls().autoRotateSpeed = 0.2;\r\n        // console.log(globeEl.current.camera().zoom);\r\n\r\n        const MAP_CENTER = {\r\n            lat: 0,\r\n            lng: 0,\r\n            altitude: 1.5,\r\n        };\r\n        globeEl.current.pointOfView(MAP_CENTER, 0);\r\n    }, [globeEl, size]);\r\n\r\n    return (\r\n        <>\r\n            <Globe\r\n                ref={globeEl}\r\n                width={size.width}\r\n                waitForGlobeReady={false}\r\n                enablePointerInteraction={false}\r\n                atmosphereColor=\"#2196f3\"\r\n                backgroundColor=\"rgba(0,0,0,0)\"\r\n                hexPolygonsData={hexData.features}\r\n                hexPolygonResolution={3} //values higher than 3 makes it buggy\r\n                hexPolygonMargin={0.62}\r\n                hexPolygonColor={useCallback(() => \"#4d8ff0\", [])}\r\n                onGlobeReady={() => {\r\n                    console.log(\"Ready\");\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StemGlobe;\r\n"],"names":["size","useWindowSize","useState","features","hexData","setHexData","globeEl","useRef","useEffect","fetch","then","res","json","current","controls","autoRotate","width","camera","zoom","pointOfView","lat","lng","altitude","ref","waitForGlobeReady","enablePointerInteraction","atmosphereColor","backgroundColor","hexPolygonsData","hexPolygonResolution","hexPolygonMargin","hexPolygonColor","useCallback","onGlobeReady","console","log"],"sourceRoot":""}